---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Gather variables for each operating system
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}-{{ ansible_facts['distribution_major_version'] | lower }}.yml"
        - "{{ ansible_facts['distribution'] | lower }}.yml"
        - "{{ ansible_facts['os_family'] | lower }}.yml"
      paths:
        - "{{ role_path }}/vars"
  tags:
    - always

- name: Fail if service was deployed using a different installation method
  ansible.builtin.fail:
    msg: "Switching installation methods for OpenStack services is not supported"
  when:
    - ansible_local is defined
    - ansible_local.openstack_ansible is defined
    - ansible_local.openstack_ansible.glance is defined
    - ansible_local.openstack_ansible.glance.install_method is defined
    - ansible_local.openstack_ansible.glance.install_method != glance_install_method

- name: Gather variables for installation method
  ansible.builtin.include_vars: "{{ glance_install_method }}_install.yml"
  tags:
    - always

- name: Including osa.db_setup role
  ansible.builtin.include_role:
    name: openstack.osa.db_setup
    apply:
      tags:
        - common-db
        - glance-config
  when:
    - "_glance_is_first_play_host"
  vars:
    _oslodb_setup_host: "{{ glance_db_setup_host }}"
    _oslodb_ansible_python_interpreter: "{{ glance_db_setup_python_interpreter }}"
    _oslodb_setup_endpoint: "{{ glance_galera_address }}"
    _oslodb_setup_port: "{{ glance_galera_port }}"
    _oslodb_databases:
      - name: "{{ glance_galera_database }}"
        users:
          - username: "{{ glance_galera_user }}"
            password: "{{ glance_container_mysql_password }}"
  tags:
    - always

- name: Including osa.mq_setup role
  ansible.builtin.include_role:
    name: openstack.osa.mq_setup
    apply:
      tags:
        - common-mq
        - glance-config
  when:
    - "_glance_is_first_play_host"
  vars:
    _oslomsg_rpc_setup_host: "{{ glance_oslomsg_rpc_setup_host }}"
    _oslomsg_rpc_userid: "{{ glance_oslomsg_rpc_userid }}"
    _oslomsg_rpc_password: "{{ glance_oslomsg_rpc_password }}"
    _oslomsg_rpc_vhost: "{{ glance_oslomsg_rpc_vhost }}"
    _oslomsg_rpc_transport: "{{ glance_oslomsg_rpc_transport }}"
    _oslomsg_rpc_policies: "{{ glance_oslomsg_rpc_policies }}"
    _oslomsg_rpc_configure: "{{ glance_oslomsg_rpc_configure }}"
    _oslomsg_notify_setup_host: "{{ glance_oslomsg_notify_setup_host }}"
    _oslomsg_notify_userid: "{{ glance_oslomsg_notify_userid }}"
    _oslomsg_notify_password: "{{ glance_oslomsg_notify_password }}"
    _oslomsg_notify_vhost: "{{ glance_oslomsg_notify_vhost }}"
    _oslomsg_notify_transport: "{{ glance_oslomsg_notify_transport }}"
    _oslomsg_notify_policies: "{{ glance_oslomsg_notify_policies }}"
    _oslomsg_notify_configure: "{{ glance_oslomsg_notify_configure }}"
  tags:
    - always

- name: Importing glance_install tasks
  ansible.builtin.import_tasks: glance_install.yml
  tags:
    - glance-install

- name: Create and install SSL certificates
  ansible.builtin.include_role:
    name: pki
    tasks_from: main_certs.yml
    apply:
      tags:
        - glance-config
        - pki
  vars:
    pki_setup_host: "{{ glance_pki_setup_host }}"
    pki_dir: "{{ glance_pki_dir }}"
    pki_create_certificates: "{{ glance_user_ssl_cert is not defined and glance_user_ssl_key is not defined }}"
    pki_regen_cert: "{{ glance_pki_regen_cert }}"
    pki_certificates: "{{ glance_pki_certificates }}"
    pki_install_certificates: "{{ glance_pki_install_certificates }}"
  when:
    - glance_backend_ssl
  tags:
    - always

- name: Importing glance_post_install tasks
  ansible.builtin.import_tasks: glance_post_install.yml
  tags:
    - glance-config
    - post-install

- name: Including glance_db_sync tasks
  ansible.builtin.include_tasks: glance_db_sync.yml
  args:
    apply:
      tags:
        - glance-config
  when:
    - "_glance_is_first_play_host"
  tags:
    - glance-config

- name: Including osa.service_setup role
  ansible.builtin.include_role:
    name: openstack.osa.service_setup
    apply:
      tags:
        - common-service
        - glance-config
  vars:
    _service_adminuri_insecure: "{{ keystone_service_adminuri_insecure }}"
    _service_in_ldap: "{{ glance_service_in_ldap }}"
    _service_setup_host: "{{ glance_service_setup_host }}"
    _service_setup_host_python_interpreter: "{{ glance_service_setup_host_python_interpreter }}"
    _service_project_name: "{{ glance_service_project_name }}"
    _service_region: "{{ glance_service_region }}"
    _service_users:
      - name: "{{ glance_service_user_name }}"
        password: "{{ glance_service_password }}"
        role: "{{ glance_service_role_names }}"
    _service_catalog:
      - name: "{{ glance_service_name }}"
        type: "{{ glance_service_type }}"
        description: "{{ glance_service_description }}"
    _service_endpoints:
      - interface: "public"
        url: "{{ glance_service_publicurl }}"
        service: "{{ glance_service_name }}"
      - interface: "internal"
        url: "{{ glance_service_internalurl }}"
        service: "{{ glance_service_name }}"
      - interface: "admin"
        url: "{{ glance_service_adminurl }}"
        service: "{{ glance_service_name }}"
  when:
    - "_glance_is_first_play_host"
  tags:
    - always

- name: Import uwsgi role
  ansible.builtin.import_role:
    name: uwsgi
  vars:
    uwsgi_services: "{{ uwsgi_glance_services }}"
    uwsgi_install_method: "{{ glance_install_method }}"
  tags:
    - glance-install
    - glance-config
    - uwsgi

- name: Include ceph_client role
  ansible.builtin.include_role:
    name: ceph_client
    apply:
      tags:
        - ceph
  vars:
    openstack_service_system_user: "{{ glance_system_user_name }}"
    openstack_service_venv_bin: "{{ (glance_install_method == 'source') | ternary(glance_bin, '') }}"
  when:
    - "glance_services['glance-api']['group'] in group_names"
    - "'rbd' in glance_available_store_types"
  tags:
    - ceph

- name: Flush handlers
  ansible.builtin.meta: flush_handlers
